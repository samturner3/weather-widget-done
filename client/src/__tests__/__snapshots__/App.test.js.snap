// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Clock /> should render all elements 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <Flipcard
        classNameBack=""
        classNameFlipper=""
        classNameFront=""
        disabled={false}
        flipped={true}
        type="horizontal"
>
        <div
                className="App"
        >
                <div
                        className="container"
                >
                        <div
                                className="widget_contain"
                                style={
                                        Object {
                                                "backgroundImage": "url(/images/SydneyBackground.jpg)",
                                              }
                                }
                        >
                                <div
                                        className="widget_left"
                                />
                                <div
                                        className="widget_right"
                                />
                        </div>
                </div>
        </div>
        <BackSide
                placesCache={null}
                setLocation={[Function]}
                showFront={[Function]}
                weatherData={undefined}
        />
</Flipcard>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <div
            className="App"
>
            <div
                        className="container"
            >
                        <div
                                    className="widget_contain"
                                    style={
                                                Object {
                                                            "backgroundImage": "url(/images/SydneyBackground.jpg)",
                                                          }
                                    }
                        >
                                    <div
                                                className="widget_left"
                                    />
                                    <div
                                                className="widget_right"
                                    />
                        </div>
            </div>
</div>,
          <BackSide
            placesCache={null}
            setLocation={[Function]}
            showFront={[Function]}
            weatherData={undefined}
/>,
        ],
        "classNameBack": "",
        "classNameFlipper": "",
        "classNameFront": "",
        "disabled": false,
        "flipped": true,
        "type": "horizontal",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="container"
>
              <div
                            className="widget_contain"
                            style={
                                          Object {
                                                        "backgroundImage": "url(/images/SydneyBackground.jpg)",
                                                      }
                            }
              >
                            <div
                                          className="widget_left"
                            />
                            <div
                                          className="widget_right"
                            />
              </div>
</div>,
            "className": "App",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="widget_contain"
                style={
                                Object {
                                                "backgroundImage": "url(/images/SydneyBackground.jpg)",
                                              }
                }
>
                <div
                                className="widget_left"
                />
                <div
                                className="widget_right"
                />
</div>,
              "className": "container",
            },
            "ref": "flipper",
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="widget_left"
/>,
                  <div
                    className="widget_right"
/>,
                ],
                "className": "widget_contain",
                "style": Object {
                  "backgroundImage": "url(/images/SydneyBackground.jpg)",
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": null,
                    "className": "widget_left",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": null,
                    "className": "widget_right",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "div",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "placesCache": null,
            "setLocation": [Function],
            "showFront": [Function],
            "weatherData": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <Flipcard
          classNameBack=""
          classNameFlipper=""
          classNameFront=""
          disabled={false}
          flipped={true}
          type="horizontal"
>
          <div
                    className="App"
          >
                    <div
                              className="container"
                    >
                              <div
                                        className="widget_contain"
                                        style={
                                                  Object {
                                                            "backgroundImage": "url(/images/SydneyBackground.jpg)",
                                                          }
                                        }
                              >
                                        <div
                                                  className="widget_left"
                                        />
                                        <div
                                                  className="widget_right"
                                        />
                              </div>
                    </div>
          </div>
          <BackSide
                    placesCache={null}
                    setLocation={[Function]}
                    showFront={[Function]}
                    weatherData={undefined}
          />
</Flipcard>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <div
              className="App"
>
              <div
                            className="container"
              >
                            <div
                                          className="widget_contain"
                                          style={
                                                        Object {
                                                                      "backgroundImage": "url(/images/SydneyBackground.jpg)",
                                                                    }
                                          }
                            >
                                          <div
                                                        className="widget_left"
                                          />
                                          <div
                                                        className="widget_right"
                                          />
                            </div>
              </div>
</div>,
            <BackSide
              placesCache={null}
              setLocation={[Function]}
              showFront={[Function]}
              weatherData={undefined}
/>,
          ],
          "classNameBack": "",
          "classNameFlipper": "",
          "classNameFront": "",
          "disabled": false,
          "flipped": true,
          "type": "horizontal",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="container"
>
                <div
                                className="widget_contain"
                                style={
                                                Object {
                                                                "backgroundImage": "url(/images/SydneyBackground.jpg)",
                                                              }
                                }
                >
                                <div
                                                className="widget_left"
                                />
                                <div
                                                className="widget_right"
                                />
                </div>
</div>,
              "className": "App",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="widget_contain"
                  style={
                                    Object {
                                                      "backgroundImage": "url(/images/SydneyBackground.jpg)",
                                                    }
                  }
>
                  <div
                                    className="widget_left"
                  />
                  <div
                                    className="widget_right"
                  />
</div>,
                "className": "container",
              },
              "ref": "flipper",
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="widget_left"
/>,
                    <div
                      className="widget_right"
/>,
                  ],
                  "className": "widget_contain",
                  "style": Object {
                    "backgroundImage": "url(/images/SydneyBackground.jpg)",
                  },
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": null,
                      "className": "widget_left",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": null,
                      "className": "widget_right",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "div",
                  },
                ],
                "type": "div",
              },
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "placesCache": null,
              "setLocation": [Function],
              "showFront": [Function],
              "weatherData": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
